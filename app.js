const { bot, api } = require('./token.js'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
const request = require('request');

//–ö–æ–º–∞–Ω–¥—ã
const commands = [

    {

        command: "/start",
        description: "–ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥"

    },
    {

        command: "/help",
        description: "–ü–æ–º–æ—â—å"

    },
    {

        command: "/weather",
        description: "–ü–æ–≥–æ–¥–∞"

    },
    {

        command: "/motivation",
        description: "–í–∑–±–æ–¥—Ä–∏—Ç—å—Å—è"

    },
]
bot.setMyCommands(commands);


// Matches "/echo [whatever]"
bot.onText(/\/start/, (msg, match) => {
    bot.sendMessage(msg.chat.id, `–ü—Ä–∏–≤–µ—Ç, @${msg.chat.username}!`);
});

// Matches "/echo [whatever]"
bot.onText(/\/weather/, (msg) => {
    getWeather(msg.text, text => {
        bot.sendMessage(msg.chat.id, text);
    });

});

bot.onText(/\/motivation/, (msg, match) => {
    bot.sendMessage(msg.chat.id, getMotivation());

});

bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    if (msg.text === '/help') {
        bot.sendMessage(chatId, "–†–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏\n\n<b>help</b> - –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n<b>weather</b> - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –£–ª–∞–Ω-–£–¥—ç\n<b>motivation</b> - –ø—Ä–æ—á–∏—Ç–∞—Ç—å –±–æ—Ä—è—â—É—é —Ü–∏—Ç–∞—Ç—É –æ—Ç –±–æ—Ç–∞\n", {
            parse_mode: "HTML"
        });
    }
});



// –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ cron –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 4:00 –ø–æ –ú–æ—Å–∫–≤–µ (–≤ 9:00 –≤ –£–ª–∞–Ω-–£–î—ç)
const cron = require('cron');
function sendTime() {
    new cron.CronJob('0 4 * * *', // cronTime
        function () {
            bot.sendMessage(msg.chat.id, getMotivation());
        }, // onTick
        null, // onComplete
        true, // start
        'Europe/Moscow' // timeZone
    );
}


// Matches "/echo [whatever]"
bot.onText(/\/echo (.+)/, (msg, match) => {

    const chatId = msg.chat.id;
    const resp = match[1]; // the captured "whatever"

    bot.sendMessage(chatId, resp);
});

function getWeather(lat, lon, callback) {
    url = `https://api.openweathermap.org/data/2.5/weather?lat=51.82&lon=107.60&appid=${api}&lang=ru&units=metric`;
    request(url, function (error, response, body) {
        if (error) return '–û—à–∏–±–∫–∞', error;
        // console.log(body);
        let inf = JSON.parse(body)
        // console.log(inf);
        text = `–°–µ–≥–æ–¥–Ω—è –≤ ${inf.name}:\n${inf.weather[0].description}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${inf.main.temp}‚ÑÉ (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${inf.main.feels_like}‚ÑÉ) \n–í–ª–∞–∂–Ω–æ—Å—Ç—å ${inf.main.humidity}% \n–í–µ—Ç–µ—Ä ${inf.wind.speed}–º/—Å`;
        callback(text);
    });
}

function getRandomNumber(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function getMotivation(){
    const quotes = [
        "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - –Ω–æ–≤—ã–π —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ª—É—á—à–µ, —á–µ–º –≤—á–µ—Ä–∞.",
        "–ù–µ –∂–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å–∞–º–∏.",
        "–õ—É—á—à–∏–π —Å–ø–æ—Å–æ–± –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –±—É–¥—É—â–µ–µ - —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ.",
        "–°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –Ω–µ –∫ —É—Å–ø–µ—Ö—É, –∞ –∫ —Ü–µ–Ω–Ω–æ—Å—Ç—è–º, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –Ω–µ—Å–µ—Ç.",
        "–ü—É—Å—Ç—å –Ω–µ—É–¥–∞—á–∏ —Å—Ç–∞–Ω—É—Ç –≤–∞—à–∏–º–∏ —É—á–∏—Ç–µ–ª—è–º–∏, –∞ –Ω–µ –≤—Ä–∞–≥–∞–º–∏.",
        "–í–∞—à–µ –∑–∞–≤—Ç—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–µ–≥–æ–¥–Ω—è.",
        "–ë—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞ —Ç—Ä–µ–±—É—é—Ç –≤—Ä–µ–º–µ–Ω–∏.",
        "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º, –∫—Ç–æ —Ç—Ä—É–¥–∏—Ç—Å—è.",
        "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å.",
        "–î–µ–ª–∞–π—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã –ª—é–±–∏—Ç–µ, –∏ –ª—é–±–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã –¥–µ–ª–∞–µ—Ç–µ.",
        "–†–∞–∑–≤–∏—Ç–∏–µ —Ç—Ä–µ–±—É–µ—Ç –≤—Ä–µ–º–µ–Ω–∏, —É—Å–∏–ª–∏—è –∏ —Ç–µ—Ä–ø–µ–Ω–∏—è.",
        "–ë—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –∫ –Ω–æ–≤—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –∏ –æ–ø—ã—Ç—É.",
        "–¶–µ–Ω–∏—Ç–µ –∫–∞–∂–¥—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∏—Ç—å—Å—è –∏ —Ä–∞—Å—Ç–∏.",
        "–°—Ç–∞–≤—å—Ç–µ –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π —Ü–µ–ª–∏ –∏ —Ä–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ –∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º.",
        "–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —É—Å–ø–µ—Ö –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º, –∫—Ç–æ –≥–æ—Ç–æ–≤ –∏–¥—Ç–∏ –Ω–∞ —Ä–∏—Å–∫.",
        "–ù–µ –±–æ–π—Ç–µ—Å—å —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ—à–∏–±–∫–∏ ‚Äì –æ–Ω–∏ –¥–µ–ª–∞—é—Ç –≤–∞—Å —Å–∏–ª—å–Ω–µ–µ.",
        "–í–µ—Ä—å—Ç–µ –≤ —Å–µ–±—è –∏ —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.",
        "–ü—Ä–æ—è–≤–ª—è–π—Ç–µ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π.",
        "–ë—É–¥—å—Ç–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ –≤—Å–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å.",
        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∏ –æ–ø—Ç–∏–º–∏–∑–º.",
        "–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ —Å–µ–±—è —Å –¥—Ä—É–≥–∏–º–∏ ‚Äì —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Å–≤–æ–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º –ø—É—Ç–∏.",
        "–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –ø—Ä–æ—Ü–µ—Å—Å–æ–º.",
        "–ó–∞ –∫–∞–∂–¥—ã–º –≤–µ–ª–∏–∫–∏–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º —Å—Ç–æ–∏—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤.",
        "–ú–µ—á—Ç–∞–π—Ç–µ –æ –±–æ–ª—å—à–æ–º, –Ω–æ –Ω–∞—á–∏–Ω–∞–π—Ç–µ —Å –º–∞–ª–æ–≥–æ.",
        "–ë—É–¥—å—Ç–µ –ø—Ä–∏–º–µ—Ä–æ–º –¥–ª—è –¥—Ä—É–≥–∏—Ö.",
        "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ—é —Å—Ç—Ä–∞—Å—Ç—å –∏ –±—É–¥—å—Ç–µ –ø—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ —Å–≤–æ–µ–º—É –¥–µ–ª—É.",
        "–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≥–∏–±–∫–∏–º–∏ –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º—ã–º–∏.",
        "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Å—Ç–∞–≤–∞–π—Ç–µ —É—á–∏—Ç—å—Å—è –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è."
    ];
    // console.log(quotes.length);
    const emojis = ['üòÅ', 'üòÉ', 'üòÑ', 'üòÜ', 'üòâ', 'üòä', 'üòã', 'üòé', 'ü•∞', 'ü§ó', 'üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'üòÅ', 'üòÉ', 'üòÑ', 'üòÜ', 'üòâ', 'üòä', 'üòã', 'üòé', 'ü•∞', 'ü§ó', 'üß°', 'üíõ', 'üíö'];
    // console.log(emojis.length);
    i = getRandomNumber(1, 28);
    text = quotes[i] + emojis[i];
    return text;

}
